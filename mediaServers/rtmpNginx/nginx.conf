# Edited by jack Lee, Sep.5th, 2017

user  root;

#worker_processes  1;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#error_log 	logs/error.log debug;


#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}



http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
    tcp_nopush on;
 #   aio on;
    directio 512;


		##################### SERVER No.1 : port 80, default web service
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


		##################### SERVER No.2 : port 7070, service for RTMP and HLS
		# another virtual server for RTMP/HLS service
        server {

            listen      7070;

            # This URL provides RTMP statistics in XML
            location /stat {
                rtmp_stat all;

                # Use this stylesheet to view XML as web page
                # in browser
                rtmp_stat_stylesheet stat.xsl;
            }

            location /stat.xsl {
                # XML stylesheet to view RTMP stats.
                # Copy stat.xsl wherever you want
                # and put the full directory path here
                root /path/to/stat.xsl/;
            }


						########   /muxServer is also used as part of path which refers to *.m3u8 file in file system
            location /muxServer {

	        				# Disable cache
        					add_header Cache-Control no-cache;

        					# CORS setup
        					add_header 'Access-Control-Allow-Origin' '*' always;
        					add_header 'Access-Control-Expose-Headers' 'Content-Length';

        					# allow CORS preflight requests
        					if ($request_method = 'OPTIONS') {
            						add_header 'Access-Control-Allow-Origin' '*';
            						add_header 'Access-Control-Max-Age' 1728000;
            						add_header 'Content-Type' 'text/plain charset=UTF-8';
            						add_header 'Content-Length' 0;
            						return 204;
        					}

	        				types {
        		    				application/vnd.apple.mpegurl m3u8;
		            				video/mp2t ts;
	        				}

									# client http://192.168.168.102:7079/muxServer/video.m3u8, then web server access /media/sf_mux/muxServer/video.m3u8
        					root /media/sf_mux;


                # Serve HLS fragments
                #types {
                #    application/vnd.apple.mpegurl m3u8;
                #    video/mp2t ts;
                #}
                #root /tmp;
                #add_header Cache-Control no-cache;
            }

            location /dash {
                # Serve DASH fragments
                root /tmp;
                add_header Cache-Control no-cache;
            }
        }


		##################### SERVER No.3 : port 8080, service for HLS application of 'hls' which home is /tmp/hls
		##################### for APP No.4 hls
    server {
        listen 8080;

        location / {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /tmp/hls/;
        }
    }

}



# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 4000;

				# APP No.1 : show
        application show {
		            live on;
		
								record all;
								record_path /tmp/;
								record_unique on;
		
		            # Turn on HLS
		            hls on;
		            hls_path /tmp/show;
		            hls_fragment 3;
		            hls_playlist_length 60;
		
		            # disable consuming the stream from nginx as rtmp
		            	#deny play all;
								allow play all;
        }
        
        
 				# APP No.2 : live
				application live {
                live on;
                record off;
        }

				# APP No.3 : jackSvr
				application jackSvr {
							live on;
							record off;
				}

				# APP No.4 : hls
				# this is for HLS service
        application hls {
              	live on;
              	hls on;
              	hls_path /tmp/hls/;
								
								hls_fragment 3;
								hls_playlist_length 60;

								# disable consuming the stream from nginx as rtmp
								deny play all;
        }

    }
}





